<!doctype html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        .container {
            width: 300px;
            height: 600px;
            overflow: auto;
            border: 1px solid;
            margin: 100px auto;
        }
        .item {
            height: 29px;
            line-height: 30px;
            border-bottom: 1px solid #aaa;
            padding-left: 20px;
        }
    </style>
</head>
<body>
<div id="app">
    <button @click="add">增加</button>
    <div id="container" class="container" ref="container">
        <div class="scroll-wrapper" :style="style">
            <div v-for="(item, index) in scrollList" :key="index" class="item">{{item}}</div>
        </div>
        
    </div>
    <p>我们此时可以给容器加一个paddingBottom，来撑开容器，来模拟页面应该滚动的高度
    	容器同时还需要paddingTop用做当容器滚动顶部数据移除后撑起scrollTop</p>
</div>
<script src="js/vue.js"></script>
<script>
    new Vue({
        el: '#app',
        data: {
            list: [
                '测试数据'
            ],
            startIndex: 0,
            endIndex: 60,
            paddingTop: 0,
            paddingBottom: 0,
            allHeight: 0
        },
        computed: {
            scrollList() {
                return this.list.slice(this.startIndex, this.endIndex) 
                
                
            },
            //div：scroll-wrapper 要绑定一个style属性，他是随时要变化的值style值随着this.paddingTop/Bottom的改变而改变
            style() {
                return {
                    paddingTop: this.paddingTop + 'px',
                    paddingBottom: this.paddingBottom + 'px'
                    
                }
            }
        },
        watch: {
            list(val) {//监听list这个数组的个数、个数×单位高度的总高度、加载一批(60个数据)后还剩下多少高度
                const valLen = val.length
                console.log(valLen)
                this.allHeight = valLen * 30
                console.log(this.allHeight)
                this.paddingBottom = this.allHeight - this.scrollList.length * 30
                console.log(this.scrollList)
                console.log(this.paddingBottom)
            }
        },
        mounted() {
        	//获取dom节点container
            const container = this.$refs.container
            console.log(this)
            console.log(this.$refs.container)
            console.log(document.getElementById("container"))
            container.addEventListener('scroll', () => {
                const top = container.scrollTop
                console.log(container.scrollTop)
                this.startIndex = Math.floor(top / 30)
                console.log(this.startIndex)
                this.endIndex = this.startIndex + 60
                console.log(this.endIndex)
				console.log(this.scrollList)
                this.paddingTop = top
                
                //滚动到最后一项数据了
                if (this.endIndex >= this.list.length - 1) {
                    this.paddingBottom = 0
                    return
                }
                this.paddingBottom = this.allHeight - 600 - top
            })
        },
        methods: {
            add() { //给list添加五万条数据
                let arr = new Array(50000).fill(0)
                arr = arr.map((item, index) => {
                    return index
                })
                this.list = [
                    ...this.list,
                    ...arr
                ]
                console.log( this.list)
            }
        }
    })
</script>

https://blog.csdn.net/weixin_30247781/article/details/101833525?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1
</body>
</html>
